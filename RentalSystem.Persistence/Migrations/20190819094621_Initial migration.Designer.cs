// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalSystem.Persistence;

namespace RentalSystem.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190819094621_Initial migration")]
    partial class Initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("RentalSystem.Persistence.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RentalSystem.Persistence.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Desc");

                    b.Property<bool>("Fixed");

                    b.Property<string>("Title");

                    b.Property<int?>("scooterId");

                    b.HasKey("Id");

                    b.HasIndex("scooterId");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("RentalSystem.Persistence.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime?>("RentalFinish");

                    b.Property<string>("RentalId");

                    b.Property<DateTime>("RentalStart");

                    b.Property<string>("ScooterId");

                    b.Property<string>("ScooterMake");

                    b.Property<TimeSpan?>("TotalTime");

                    b.Property<int>("TotalTimeInMinutes");

                    b.HasKey("Id");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("RentalSystem.Persistence.Models.RentalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime?>("RentalFinish");

                    b.Property<DateTime>("RentalStart");

                    b.Property<int?>("ScooterId");

                    b.Property<TimeSpan?>("TotalTime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScooterId");

                    b.ToTable("RentalHistory");
                });

            modelBuilder.Entity("RentalSystem.Persistence.Models.Scooter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Available");

                    b.Property<bool>("Damaged");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.HasKey("Id");

                    b.ToTable("Scooters");
                });

            modelBuilder.Entity("RentalSystem.Persistence.Models.Defect", b =>
                {
                    b.HasOne("RentalSystem.Persistence.Models.Scooter", "scooter")
                        .WithMany()
                        .HasForeignKey("scooterId");
                });

            modelBuilder.Entity("RentalSystem.Persistence.Models.RentalHistory", b =>
                {
                    b.HasOne("RentalSystem.Persistence.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("RentalSystem.Persistence.Models.Scooter", "Scooter")
                        .WithMany()
                        .HasForeignKey("ScooterId");
                });
#pragma warning restore 612, 618
        }
    }
}
